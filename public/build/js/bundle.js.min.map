{"version":3,"sources":["horas.js","ponentes.js","tags.js"],"names":["document","querySelector","busqueda","categoria_id","dia","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","terminoBusqueda","e","target","name","value","horaPrevia","classList","remove","Object","values","includes","async","url","location","origin","resultado","fetch","eventos","listadoHoras","forEach","li","add","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","addEventListener","seleccionarHora","obtenerHorasDisponibles","json","buscarEventos","ponentesInput","ponentes","ponentesFiltrados","listadoPonentes","ponenteHidden","seleccionarPonente","ponente","ponentePrevio","ponenteId","respuesta","arrayPonentes","nombre","trim","apellido","id","formatearPonentes","obtenerPonentes","length","expresion","RegExp","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","onclick","appendChild","noResultados","mostrarPonentes","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","limpiarTags","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function () {\r\n    const horas = document.querySelector(\"#horas\");\r\n\r\n    if (horas) {\r\n        let busqueda = {\r\n            categoria_id: \"\",\r\n            dia: \"\",\r\n        };\r\n\r\n        const categoria = document.querySelector(\"[name='categoria_id']\");\r\n        const dias = document.querySelectorAll(\"[name='dia']\");\r\n        const inputHiddenDia = document.querySelector(\"[name='dia_id']\");\r\n        const inputHiddenHora = document.querySelector(\"[name='hora_id']\");\r\n\r\n        categoria.addEventListener(\"change\", terminoBusqueda);\r\n        dias.forEach(dia => dia.addEventListener(\"change\", terminoBusqueda));\r\n\r\n        /* \r\n            Hacer busqueda por categoria y el dia\r\n        */\r\n        function terminoBusqueda(e) {\r\n            busqueda[e.target.name] = e.target.value;\r\n\r\n            // Reiniciar los campos ocultos y el selector de horas\r\n            inputHiddenHora.value = \"\";\r\n            inputHiddenDia.value = \"\";\r\n\r\n            const horaPrevia = document.querySelector(\r\n                \".horas__hora--seleccionada\"\r\n            );\r\n            if (horaPrevia) {\r\n                horaPrevia.classList.remove(\"horas__hora--seleccionada\");\r\n            }\r\n\r\n            if (Object.values(busqueda).includes(\"\")) {\r\n                return;\r\n            }\r\n\r\n            buscarEventos();\r\n        }\r\n\r\n        /* \r\n            Consulta la api en busca de los eventos disponibles\r\n        */\r\n        async function buscarEventos() {\r\n            const { dia, categoria_id } = busqueda;\r\n            const url = `${location.origin}/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n\r\n            const resultado = await fetch(url);\r\n            const eventos = await resultado.json();\r\n            obtenerHorasDisponibles(eventos);\r\n        }\r\n\r\n        function obtenerHorasDisponibles(eventos) {\r\n            // Reiniciar las horas\r\n            const listadoHoras = document.querySelectorAll(\"#horas li\");\r\n            listadoHoras.forEach(li =>\r\n                li.classList.add(\"horas__hora--deshabilitada\")\r\n            );\r\n\r\n            // Comprobar eventos ya tomados, y quitar la variable de deshabilitado\r\n            const horasTomadas = eventos.map(evento => evento.hora_id);\r\n\r\n            const listadoHorasArray = Array.from(listadoHoras);\r\n\r\n            const resultado = listadoHorasArray.filter(\r\n                li => !horasTomadas.includes(li.dataset.horaId)\r\n            );\r\n            resultado.forEach(li =>\r\n                li.classList.remove(\"horas__hora--deshabilitada\")\r\n            );\r\n\r\n            const horasDisponibles = document.querySelectorAll(\r\n                \"#horas li:not(.horas__hora--deshabilitada)\"\r\n            );\r\n            horasDisponibles.forEach(hora =>\r\n                hora.addEventListener(\"click\", seleccionarHora)\r\n            );\r\n        }\r\n\r\n        /* \r\n            Resalta la hora seleccionada y agrega su valor al campo hidden\r\n        */\r\n        function seleccionarHora(e) {\r\n            // Deshabilitar la hora previa, si hay un nuevo click\r\n            const horaPrevia = document.querySelector(\r\n                \".horas__hora--seleccionada\"\r\n            );\r\n            if (horaPrevia) {\r\n                horaPrevia.classList.remove(\"horas__hora--seleccionada\");\r\n            }\r\n\r\n            // Agregar clase de seleccionado\r\n            e.target.classList.add(\"horas__hora--seleccionada\");\r\n\r\n            inputHiddenHora.value = e.target.dataset.horaId;\r\n\r\n            // Llenar el campo oculto de dia\r\n            inputHiddenDia.value = document.querySelector(\r\n                \"[name='dia']:checked\"\r\n            ).value;\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    const ponentesInput = document.querySelector(\"#ponentes\");\r\n\r\n    if (ponentesInput) {\r\n        let ponentes = [];\r\n        let ponentesFiltrados = [];\r\n\r\n        const listadoPonentes = document.querySelector(\"#listado-ponentes\");\r\n        const ponenteHidden = document.querySelector(\"[name='ponente_id']\");\r\n\r\n        obtenerPonentes();\r\n\r\n        ponentesInput.addEventListener(\"input\", buscarPonentes);\r\n\r\n        /* \r\n            Obtiene todos los ponentes de la BD\r\n        */\r\n        async function obtenerPonentes() {\r\n            const url = `${location.origin}/api/ponentes`;\r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n\r\n            formatearPonentes(resultado);\r\n        }\r\n\r\n        /* \r\n\r\n        */\r\n        function formatearPonentes(arrayPonentes = []) {\r\n            ponentes = arrayPonentes.map(ponente => {\r\n                return {\r\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\r\n                    id: ponente.id,\r\n                };\r\n            });\r\n        }\r\n\r\n        function buscarPonentes(e) {\r\n            const busqueda = e.target.value;\r\n\r\n            if (busqueda.length > 3) {\r\n                const expresion = new RegExp(busqueda, \"i\");\r\n\r\n                ponentesFiltrados = ponentes.filter(ponente => {\r\n                    if (ponente.nombre.toLowerCase().search(expresion) !== -1) {\r\n                        return ponente;\r\n                    }\r\n                });\r\n            } else {\r\n                ponentesFiltrados = [];\r\n            }\r\n\r\n            mostrarPonentes();\r\n        }\r\n\r\n        function mostrarPonentes() {\r\n            while (listadoPonentes.firstChild) {\r\n                listadoPonentes.removeChild(listadoPonentes.firstChild);\r\n            }\r\n\r\n            if (ponentesFiltrados.length > 0) {\r\n                ponentesFiltrados.forEach(ponente => {\r\n                    const ponenteHTML = document.createElement(\"LI\");\r\n                    ponenteHTML.classList.add(\"listado-ponentes__ponente\");\r\n                    ponenteHTML.textContent = ponente.nombre;\r\n                    ponenteHTML.dataset.ponenteId = ponente.id;\r\n                    ponenteHTML.onclick = seleccionarPonente;\r\n\r\n                    // Añadir al DOM\r\n                    listadoPonentes.appendChild(ponenteHTML);\r\n                });\r\n            } else {\r\n                if (ponentesInput.value.length > 3) {\r\n                    const noResultados = document.createElement(\"P\");\r\n                    noResultados.classList.add(\r\n                        \"listado-ponentes__no-resultado\"\r\n                    );\r\n                    noResultados.textContent =\r\n                        \"No hay resultados para tu búsqueda\";\r\n\r\n                    listadoPonentes.appendChild(noResultados);\r\n                }\r\n            }\r\n        }\r\n\r\n        function seleccionarPonente(e) {\r\n            const ponente = e.target;\r\n\r\n            // Remover la clase previa\r\n            const ponentePrevio = document.querySelector(\".listado-ponentes__ponente--seleccionado\");\r\n            if (ponentePrevio) {\r\n                ponentePrevio.classList.remove();\r\n            }\r\n\r\n            ponente.classList.add(\"listado-ponentes__ponente--seleccionado\");\r\n            ponenteHidden.value = ponente.dataset.ponenteId;\r\n\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    const tagsInput = document.querySelector(\"#tags_input\");\r\n\r\n    // Si existe el input...\r\n    if (tagsInput) {\r\n        const tagsDiv = document.querySelector(\"#tags\");\r\n        const tagsInputHidden = document.querySelector(\"[name='tags']\");\r\n\r\n        let tags = [];\r\n\r\n        // Recuperar del input oculto\r\n        if (tagsInputHidden.value !== \"\") {\r\n            tags = tagsInputHidden.value.split(\",\");\r\n            mostrarTags();\r\n        }\r\n\r\n        // Escuchar los cambios en el input\r\n        tagsInput.addEventListener(\"keypress\", guardarTag);\r\n\r\n        function guardarTag(e) {\r\n            // Si se presiono la coma...\r\n            if (e.keyCode === 44) {\r\n                e.preventDefault();\r\n\r\n                if (e.target.value.trim() === \"\" || e.target.value.length < 1) {\r\n                    return;\r\n                }\r\n\r\n                tags = [...tags, e.target.value.trim()];\r\n\r\n                tagsInput.value = \"\";\r\n\r\n                mostrarTags();\r\n            }\r\n        }\r\n\r\n        function mostrarTags() {\r\n            limpiarTags();\r\n\r\n            tags.forEach(tag => {\r\n                const etiqueta = document.createElement(\"LI\");\r\n                etiqueta.classList.add(\"formulario__tag\");\r\n                etiqueta.textContent = tag;\r\n                etiqueta.ondblclick = eliminarTag;\r\n                tagsDiv.appendChild(etiqueta);\r\n            });\r\n\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function actualizarInputHidden() {\r\n            tagsInputHidden.value = tags.toString();\r\n        }\r\n\r\n        function eliminarTag(e) {\r\n            e.target.remove();\r\n\r\n            tags = tags.filter(tag => tag !== e.target.textContent);\r\n\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function limpiarTags() {\r\n            while (tagsDiv.firstChild) {\r\n                tagsDiv.removeChild(tagsDiv.firstChild);\r\n            }\r\n        }\r\n    }\r\n})();\r\n"]}