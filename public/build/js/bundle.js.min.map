{"version":3,"sources":["horas.js","ponentes.js","tags.js"],"names":["document","querySelector","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","addEventListener","terminoBusqueda","forEach","dia","busqueda","categoria_id","value","e","target","name","horaPrevia","classList","remove","Object","values","includes","buscarEventos","async","url","location","origin","resultado","fetch","eventos","listadoHoras","li","add","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","seleccionarHora","obtenerHorasDisponibles","json","id","horaSeleccionada","onclick","ponentesInput","ponentes","ponentesFiltrados","listadoPonentes","ponenteHidden","seleccionarPonente","ponente","ponentePrevio","ponenteId","respuesta","arrayPonentes","nombre","trim","apellido","formatearPonentes","obtenerPonentes","length","expresion","RegExp","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","appendChild","noResultados","mostrarPonentes","obtenerPonente","ponenteDOM","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","limpiarTags","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function () {\r\n    const horas = document.querySelector(\"#horas\");\r\n\r\n    if (horas) {\r\n        const categoria = document.querySelector(\"[name='categoria_id']\");\r\n        const dias = document.querySelectorAll(\"[name='dia']\");\r\n        const inputHiddenDia = document.querySelector(\"[name='dia_id']\");\r\n        const inputHiddenHora = document.querySelector(\"[name='hora_id']\");\r\n\r\n        categoria.addEventListener(\"change\", terminoBusqueda);\r\n        dias.forEach(dia => dia.addEventListener(\"change\", terminoBusqueda));\r\n\r\n        let busqueda = {\r\n            categoria_id: +categoria.value || \"\",\r\n            dia: +inputHiddenDia.value || \"\",\r\n        };\r\n\r\n        if (!Object.values(busqueda).includes(\"\")) {\r\n            (async () => {\r\n                await buscarEventos();\r\n\r\n                const id = inputHiddenHora.value;\r\n\r\n                // Resaltar la hora actual\r\n                const horaSeleccionada = document.querySelector(\r\n                    `[data-hora-id=\"${id}\"]`\r\n                );\r\n                horaSeleccionada.classList.remove(\"horas__hora--deshabilitada\");\r\n                horaSeleccionada.classList.add(\"horas__hora--seleccionada\");\r\n\r\n                horaSeleccionada.onclick = seleccionarHora;\r\n            })();\r\n        }\r\n\r\n        /* \r\n            Hacer busqueda por categoria y el dia\r\n        */\r\n        function terminoBusqueda(e) {\r\n            busqueda[e.target.name] = e.target.value;\r\n\r\n            // Reiniciar los campos ocultos y el selector de horas\r\n            inputHiddenHora.value = \"\";\r\n            inputHiddenDia.value = \"\";\r\n\r\n            const horaPrevia = document.querySelector(\r\n                \".horas__hora--seleccionada\"\r\n            );\r\n            if (horaPrevia) {\r\n                horaPrevia.classList.remove(\"horas__hora--seleccionada\");\r\n            }\r\n\r\n            if (Object.values(busqueda).includes(\"\")) {\r\n                return;\r\n            }\r\n\r\n            buscarEventos();\r\n        }\r\n\r\n        /* \r\n            Consulta la api en busca de los eventos disponibles\r\n        */\r\n        async function buscarEventos() {\r\n            const { dia, categoria_id } = busqueda;\r\n            const url = `${location.origin}/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n\r\n            const resultado = await fetch(url);\r\n            const eventos = await resultado.json();\r\n            obtenerHorasDisponibles(eventos);\r\n        }\r\n\r\n        function obtenerHorasDisponibles(eventos) {\r\n            // Reiniciar las horas\r\n            const listadoHoras = document.querySelectorAll(\"#horas li\");\r\n            listadoHoras.forEach(li =>\r\n                li.classList.add(\"horas__hora--deshabilitada\")\r\n            );\r\n\r\n            // Comprobar eventos ya tomados, y quitar la variable de deshabilitado\r\n            const horasTomadas = eventos.map(evento => evento.hora_id);\r\n\r\n            const listadoHorasArray = Array.from(listadoHoras);\r\n\r\n            const resultado = listadoHorasArray.filter(\r\n                li => !horasTomadas.includes(li.dataset.horaId)\r\n            );\r\n            resultado.forEach(li =>\r\n                li.classList.remove(\"horas__hora--deshabilitada\")\r\n            );\r\n\r\n            const horasDisponibles = document.querySelectorAll(\r\n                \"#horas li:not(.horas__hora--deshabilitada)\"\r\n            );\r\n            horasDisponibles.forEach(hora =>\r\n                hora.addEventListener(\"click\", seleccionarHora)\r\n            );\r\n        }\r\n\r\n        /* \r\n            Resalta la hora seleccionada y agrega su valor al campo hidden\r\n        */\r\n        function seleccionarHora(e) {\r\n            // Deshabilitar la hora previa, si hay un nuevo click\r\n            const horaPrevia = document.querySelector(\r\n                \".horas__hora--seleccionada\"\r\n            );\r\n            if (horaPrevia) {\r\n                horaPrevia.classList.remove(\"horas__hora--seleccionada\");\r\n            }\r\n\r\n            // Agregar clase de seleccionado\r\n            e.target.classList.add(\"horas__hora--seleccionada\");\r\n\r\n            inputHiddenHora.value = e.target.dataset.horaId;\r\n\r\n            // Llenar el campo oculto de dia\r\n            inputHiddenDia.value = document.querySelector(\r\n                \"[name='dia']:checked\"\r\n            ).value;\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    const ponentesInput = document.querySelector(\"#ponentes\");\r\n\r\n    if (ponentesInput) {\r\n        let ponentes = [];\r\n        let ponentesFiltrados = [];\r\n\r\n        const listadoPonentes = document.querySelector(\"#listado-ponentes\");\r\n        const ponenteHidden = document.querySelector(\"[name='ponente_id']\");\r\n\r\n        obtenerPonentes();\r\n        ponentesInput.addEventListener(\"input\", buscarPonentes);\r\n\r\n        if (ponenteHidden.value) {\r\n            (async () => {\r\n                const ponente = await obtenerPonente(ponenteHidden.value);\r\n                const { nombre, apellido } = ponente;\r\n\r\n                // Insertar en el HTML\r\n                const ponenteDOM = document.createElement(\"LI\");\r\n                ponenteDOM.classList.add(\r\n                    \"listado-ponentes__ponente\",\r\n                    \"listado-ponentes__ponente--seleccionado\"\r\n                );\r\n                ponenteDOM.textContent = `${nombre} ${apellido}`;\r\n\r\n                listadoPonentes.appendChild(ponenteDOM);\r\n            })();\r\n        }\r\n\r\n        /* \r\n            Obtiene todos los ponentes de la BD\r\n        */\r\n        async function obtenerPonentes() {\r\n            const url = `${location.origin}/api/ponentes`;\r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n            formatearPonentes(resultado);\r\n        }\r\n\r\n        async function obtenerPonente(id) {\r\n            const url = `${location.origin}/api/ponente?id=${id}`;\r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n            return resultado;\r\n        }\r\n\r\n        /* \r\n            Devulve un objeto con la informacion del ponente\r\n        */\r\n        function formatearPonentes(arrayPonentes = []) {\r\n            ponentes = arrayPonentes.map(ponente => {\r\n                return {\r\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\r\n                    id: ponente.id,\r\n                };\r\n            });\r\n        }\r\n\r\n        function buscarPonentes(e) {\r\n            const busqueda = e.target.value;\r\n\r\n            if (busqueda.length > 3) {\r\n                const expresion = new RegExp(busqueda, \"i\");\r\n\r\n                ponentesFiltrados = ponentes.filter(ponente => {\r\n                    if (ponente.nombre.toLowerCase().search(expresion) !== -1) {\r\n                        return ponente;\r\n                    }\r\n                });\r\n            } else {\r\n                ponentesFiltrados = [];\r\n            }\r\n\r\n            mostrarPonentes();\r\n        }\r\n\r\n        function mostrarPonentes() {\r\n            while (listadoPonentes.firstChild) {\r\n                listadoPonentes.removeChild(listadoPonentes.firstChild);\r\n            }\r\n\r\n            if (ponentesFiltrados.length > 0) {\r\n                ponentesFiltrados.forEach(ponente => {\r\n                    const ponenteHTML = document.createElement(\"LI\");\r\n                    ponenteHTML.classList.add(\"listado-ponentes__ponente\");\r\n                    ponenteHTML.textContent = ponente.nombre;\r\n                    ponenteHTML.dataset.ponenteId = ponente.id;\r\n                    ponenteHTML.onclick = seleccionarPonente;\r\n\r\n                    // Añadir al DOM\r\n                    listadoPonentes.appendChild(ponenteHTML);\r\n                });\r\n            } else {\r\n                if (ponentesInput.value.length > 3) {\r\n                    const noResultados = document.createElement(\"P\");\r\n                    noResultados.classList.add(\r\n                        \"listado-ponentes__no-resultado\"\r\n                    );\r\n                    noResultados.textContent =\r\n                        \"No hay resultados para tu búsqueda\";\r\n\r\n                    listadoPonentes.appendChild(noResultados);\r\n                }\r\n            }\r\n        }\r\n\r\n        function seleccionarPonente(e) {\r\n            const ponente = e.target;\r\n\r\n            // Remover la clase previa\r\n            const ponentePrevio = document.querySelector(\r\n                \".listado-ponentes__ponente--seleccionado\"\r\n            );\r\n            if (ponentePrevio) {\r\n                ponentePrevio.classList.remove();\r\n            }\r\n\r\n            ponente.classList.add(\"listado-ponentes__ponente--seleccionado\");\r\n            ponenteHidden.value = ponente.dataset.ponenteId;\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    const tagsInput = document.querySelector(\"#tags_input\");\r\n\r\n    // Si existe el input...\r\n    if (tagsInput) {\r\n        const tagsDiv = document.querySelector(\"#tags\");\r\n        const tagsInputHidden = document.querySelector(\"[name='tags']\");\r\n\r\n        let tags = [];\r\n\r\n        // Recuperar del input oculto\r\n        if (tagsInputHidden.value !== \"\") {\r\n            tags = tagsInputHidden.value.split(\",\");\r\n            mostrarTags();\r\n        }\r\n\r\n        // Escuchar los cambios en el input\r\n        tagsInput.addEventListener(\"keypress\", guardarTag);\r\n\r\n        function guardarTag(e) {\r\n            // Si se presiono la coma...\r\n            if (e.keyCode === 44) {\r\n                e.preventDefault();\r\n\r\n                if (e.target.value.trim() === \"\" || e.target.value.length < 1) {\r\n                    return;\r\n                }\r\n\r\n                tags = [...tags, e.target.value.trim()];\r\n\r\n                tagsInput.value = \"\";\r\n\r\n                mostrarTags();\r\n            }\r\n        }\r\n\r\n        function mostrarTags() {\r\n            limpiarTags();\r\n\r\n            tags.forEach(tag => {\r\n                const etiqueta = document.createElement(\"LI\");\r\n                etiqueta.classList.add(\"formulario__tag\");\r\n                etiqueta.textContent = tag;\r\n                etiqueta.ondblclick = eliminarTag;\r\n                tagsDiv.appendChild(etiqueta);\r\n            });\r\n\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function actualizarInputHidden() {\r\n            tagsInputHidden.value = tags.toString();\r\n        }\r\n\r\n        function eliminarTag(e) {\r\n            e.target.remove();\r\n\r\n            tags = tags.filter(tag => tag !== e.target.textContent);\r\n\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function limpiarTags() {\r\n            while (tagsDiv.firstChild) {\r\n                tagsDiv.removeChild(tagsDiv.firstChild);\r\n            }\r\n        }\r\n    }\r\n})();\r\n"]}